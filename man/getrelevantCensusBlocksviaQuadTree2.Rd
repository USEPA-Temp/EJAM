% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getrelevantCensusBlocksviaQuadTree2.R
\name{getrelevantCensusBlocksviaQuadTree2}
\alias{getrelevantCensusBlocksviaQuadTree2}
\title{Find nearby blocks using Quad Tree data structure for speed, NO PARALLEL PROCESSING}
\usage{
getrelevantCensusBlocksviaQuadTree2(
  sitepoints,
  cutoff = 1,
  maxcutoff = 31.07,
  uniqueonly = FALSE,
  avoidorphans = TRUE
)
}
\arguments{
\item{sitepoints}{data.table with columns siteid, lat, lon giving point locations of sites or facilities around which are circular buffers}

\item{cutoff}{miles distance (check what this actually does)}

\item{maxcutoff}{miles distance (check what this actually does)}

\item{uniqueonly}{logical WILL BE REMOVED AND DONE apart from THIS FUNCTION. default FALSE (may remove this param) Whether to retain only unique blocks (unique residents) to avoid double-counting (but we want to drop duplicates later, not in here)}

\item{avoidorphans}{logical}
}
\description{
Given a set of points and a specified radius (cutoff), 
  this function quickly finds all the US Census blocks near each point. 
  For each point, it uses the specified cutoff distance and finds the distance to 
  every block within the circle defined by the radius (cutoff). 
  Each block is defined by its Census-provided internal point, by latitude and longitude.
  
  Each point can be the location of a regulated facility or other type of site, and 
  the blocks are a high-resolution source of information about where
  residents live. 
  
  Finding which blocks have their internal points in a circle provides 
  a way to quickly estimate what fraction of a block group is 
  inside the circular buffer more accurately and more quickly than
  areal apportionment of block groups would provide.
}
\details{
Relies on blockquadtree, indexgridsize and quaddata  
  variables that need to be available in the global environment, as data
  from a loaded package.
}
\seealso{
\link{getrelevantCensusBlocksviaQuadTree2}  \link{computeActualDistancefromSurfacedistance}
}
