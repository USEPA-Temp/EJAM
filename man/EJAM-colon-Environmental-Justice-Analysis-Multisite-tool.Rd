% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EJAM-package.R
\docType{package}
\name{EJAM: Environmental Justice Analysis Multisite tool}
\alias{EJAM: Environmental Justice Analysis Multisite tool}
\alias{_PACKAGE}
\alias{EJAM-package}
\title{EJAM: Environmental Justice Analysis Multisite tool}
\description{
This package provides functions and data for very fast proximity analysis
for a large number of locations, or "buffers", summarizing conditions at each location.
It summarizes conditions as the conditions for the average resident in the buffer at that location.
A buffer or location here is defined as the area within a specified distance of a specified site.
A site of facility in this package is defined as a single geographic point (by latitude and longitude).

The functions here are somewhat generalized, but the specific datasets included here enable an
environmental justice (EJ) proximity analysis of US EPA's EJSCREEN data, including
environmental indicators (e.g., local traffic score, or estimated PM2.5 concentration)
and demographic indicators (e.g., percent low-income),
for the populations estimated to live within a specified distance (e.g., 3 miles) from
one or more sites, typically EPA-regulated facilities.
This means the tools can provide the same information that an EJSCREEN standard report provides,
but for a large number of reports (one for each site).
}
\details{
\subsection{\strong{DATA FILES FOR DISTANCE ANALYSIS}}{

(older file was called blockdata.rda ... pre-2022 had been used to hold many columns,
like variables used in doaggregate and nonessential ones too)

\strong{\link{quaddata}.rda} (may rename as blockpoints)  dataset data.table of <5.8m rows once 0pop blocks gone (Was 140MB file for 2010, 120MB for 2020),
\itemize{
\item blockid (was upper case but may change)
\item "BLOCK_X"  "BLOCK_Y"   "BLOCK_Z"  (not lat, lon)
}

\strong{\link{blockquadtree}.rda}  (may rename as blocktree) Index to quaddata (QuadTree class, via SearchTrees pkg), not a data.table

-------then those are used in getrelevant with user's sitepoints to create user's sites2blocks:
}

\subsection{\strong{OUTPUT RESULTS CREATED FOR USER}}{

\code{results_overall}   one row data.table, like results_by_site, but just one row with aggregated results for all unique residents.

\code{results_by_site}   results for individual sites (buffers) - a data.table of results, one row per siteid, one column per indicator
\itemize{
\item maybe want some extra rows    with summary stats across people and sites (about the distribution), one column per indicator.
BUT MOST OF THE INTERESTING STATS LIKE MEDIAN PERSON'S SCORE, OR WORST BLOCKGROUP,
HAVE TO BE CALCULATED BEFORE AGGREGATING OR SUMMARIZING BY SITE (BUFFER)... FROM THE RAW BG DATA!
Same for sites: worst site as measured by highest nearby blockgroup-level \%poor needs raw bg data before summarized by siteid.
\item maybe some extra columns with summary stats across indicators, as separate summary stats beyond what EJSCREEN report does?, one row per site and for overall.
}

@details  OLDER NOTES ON various older DATASETS

NOTE: THESE NEED TO BE UPDATED TO 2020/2021 AND MAYBE RENAMED to make clear the vintage
and RECODE FUNCTIONS TO USE LATEST DATASETS. --
work in progress...
bgstats or blockgroupstats.rdata is now the 2020 version, but
usastats and other lookups ARE NOT UPDATED TO 2020V YET,
etc.
\itemize{
\item \link{blockgroupstats}  data.table (such as EJSCREEN demographic and environmental data by blockgroup - EJSCREEN 2020 version was about 100MB as .rdata)
\item bgstats2020  will be the new version...
\item blockdata::blockdata        data.table (Census 2010 version was 335 MB as .rdata, 6.2 million rows; Census 2020 would be 8.2 million)
with these and other columns: blockid, BLOCKGROUPFIPS, STUSAB, STATE, COUNTY, TRACT, BLKGRP, BLOCK, POP100, HU100, Census2010Totalpop
\item blockdata::blockquadtree  tree indexing of quaddata, locations of blocks
\item blockdata::quaddata         data.table (Census 2010 version was 140 MB as .rdata, 6.2 million rows; Census 2020 would be 8.2 million)
\item Will clarify facilities vs sitepoints.
\item frsdata::frs  not really needed for EJAM... data.table (The 2021 Facility Registry System version was 98 MB as .rdata, >1 million rows, EPA-regulated facilities) with lat/lon location and other information)
\item frsdata::frs_naics_2016  data.table needed to get lat lon by naics, from the 2016 version, one row per naics per registry id
\item frsdata::facilities  data.table (The 2016 Facility Registry System version was 98 MB as .rdata, >1 million rows, EPA-regulated facilities) with lat/lon location and other information)
\item sitepoints*  data.table input by user: siteid, lat, lon (centers of circular buffers)
\item \link{points100example}* Random test datapoints
\item \link{points1000example}* Random test datapoints
\item \link{NAICS}*   data.table of industrial codes and names of those sectors or industries, for selecting sites by NAICS
\item \link{usastats}* and \emph{\link{statestats}}  data.table lookup of 100 percentiles and means (for each indicator in blockgroupstats) in each zone (us, region, or state)
\item \link{stateregions}*  data.table lookup of EPA REGION given the ST (state code like AK)
\item \link{statesshp}*     shapefile of state boundries to determine what state a point is in
}
}
}
\section{Key Functions:}{
\itemize{
\item \code{\link[=doaggregate]{doaggregate()}} Summarize the indicators from blockgroupstats within each buffer weighted using blockdata
(for average resident within specified distance of site or facility)
NOTE: THAT FUNCTION IS BEING REWRITTEN to be generic to use any indicators,
and to use smaller data files, and be faster, etc.
doaggregate2() is that work in progress.
\item \code{\link[=getrelevantCensusBlocksviaQuadTree_Clustered]{getrelevantCensusBlocksviaQuadTree_Clustered()}}  Very fast method to buffer, identifying which blocks are within specified distance of site or facility
}
}

\section{\strong{SPECIFYING BUFFER SITES/FACILITIES}}{
A user can specify locations, via an interface, and that shiny app then
returns \code{sitepoints}, a data.table with fields siteid, lat, lon.

One can specify the places to be analyzed (sites or facilities)
in one of three ways:
\enumerate{
\item NAICS code (selecting from a list, one or more types of facilities, as defined by NAICS)
The NAICS are 2-digit to 6-digit codes that specify industrial sectors or types of facilities, such as
325 - Chemical Manufacturing, or 325211 - Plastics Material and Resin Manufacturing.
\item Facility IDs - EPA Facility Registry System (FRS) ID numbers
\item uploaded locations as lat/lon points.
}

**1- SPECIFYING INDUSTRIAL SECTORS/ NAICS:  **
Interface lets user select NAICS from pulldown, or type in NAICS
Interface returns \code{naics_selected}, a vector of one or more naics codes,
converted to \code{sitepoints} by naics2latlon().

\strong{naics2latlon(naics_selected)} returns \code{sitepoints} data.table (note here, siteid is just 1:n)\preformatted{  Requires **frsdata::frs_naics_2016.rdata**  or  frs_naics_2017?.rdata or 2022? dataset data.table
  the 2016 version was facdata.rdata renamed  frs_naics_2016.rdata 
  with columns PROGRAM, PROGRAM_ID, REGISTRY_ID, NAICS, LAT, LONG
}

\strong{2- SPECIFYING FACILITY IDS:}
Interface so user can upload FRS REGISTRY_ID csv file,
Interface returns \code{frsids}, list of REGISTRY_ID values from FRS
converted to \code{sitepoints} by frsid2latlon().

\strong{\href{frsids}{frsid2latlon()}} returns \code{sitepoints} data.table\preformatted{** Requires **[frsdata::frsid2latlon].rdata** dataset data.table with columns frsid, lat, lon
}

**3- SPECIFYING LAT/LON POINTS: **
Interface so user can upload latitude longitude siteid (and optionally other columns like sitename),
Returns \code{sitepoints[ , .(siteid, lat, lon)]}  data.table (here, siteid is just 1:n)
}

\section{\strong{BUFFERING, TO FIND site-block DISTANCES}}{
Input: \strong{\code{sitepoints}} data.table from user picking points
Columns are siteid, lat, lon; maybe 100 to 10k points

\strong{\href{sitepoints}{getrelevantCensusBlocksviaQuadTree}}
Returns \code{sites2blocks}
Requires datasets \link{quaddata} and \link{blockquadtree} (may rename)

\strong{sites2blocks}   Created by \code{\link[=getrelevantCensusBlocksviaQuadTree]{getrelevantCensusBlocksviaQuadTree()}} and passed to  \code{\link[=doaggregate]{doaggregate()}}
This is a data table with maybe 100k to 1m rows (assume 1k blocks within 3 miles of each site, or 100 blocks within 1 mile),
\verb{sites2blocks[ , .(siteid, blockid, distance or dist)]}
\itemize{
\item siteid    (site with circular buffer to group by)
\item blockid   (and blockfips?)  for join to blockwts
\item distance or dist  (in miles, from block to site) (0 or irrelevant for noncircular buffers,
since a block is only in this table if in one or more buffers,
unless analysis is for residents within x miles of the edges of some shapes, like facility boundaries)
}
}

\section{\strong{SUMMARIZING INDICATORS IN BUFFERS}}{
\preformatted{  INPUT IS  `sites2blocks`, 
  OUTPUT IS results_overall, results_bysite, and maybe other summary stats  ####
}

** doaggregate2 <- function(sites2blocks) **
#(in buffer and overall)

\strong{\link{blockwts}.rda}
Required by \code{\link[=doaggregate]{doaggregate()}}. A data.table of 6-8m rows
\itemize{
\item blockid (integer key  for join to sites2blocks)
\item bgfips integer key, for sum(blockwt), by=bgfips, and for join to bgstats
\item bgid ?  integer key might add this at some point. More efficient than bgfips but bgfips is easier for join to bgstats.
\item blockwt  number, fraction of parent blockgroup decennial pop that is in this one block)
}

\strong{\link{bgstats}.rda} or v2  a data.table with 220k rows, and about 200 cols:
\itemize{
\item bgid    integer key for join to
\item bgfips  for convenience? not sure it is needed
\item pop
\item many columns of blockgroup indicator scores (approx 200 columns)
e.g., counts like count of lowincome people, percents like pct lowincome, etc.
}
}

\section{OTHER DATA FILES}{
\itemize{
\item \link{sites2blocks_example}* sample output of getrelevant...
\item \link{points100example}* Random test datapoints
\item \link{points1000example}* Random test datapoints
\item \link{usastats}* and \emph{\link{statestats}}  data.table lookup of 100 percentiles and means (for each indicator in blockgroupstats) in each zone (us, region, or state)
\item \link{stateregions}*  data.table lookup of EPA REGION given the ST (state code like AK)
\item \link{statesshp}*     shapefile of state boundries to determine what state a point is in
}
}

\section{Buffering method:}{
The buffering is currently done in a way that includes all Census blocks (2010 blocks, as of 8/2021)
whose "internal point" (a lat/lon provided by Census) is within the specified distance of the facility point.

The summary or aggregation or "rollup" within the buffer is done by calculating the
population-weighted average block group score among all the people residing in the buffer.

Since the blockgroup population counts are from American Community Survey (ACS) estimates,
but the block population counts are from a decennial census, the totals for a blockgroup differ.
The amount each partial blockgroup contributes to the buffer's overall score is based on
the estimated number of residents from that blockgroup who are in the buffer.
This is based on the fraction of the blockgroup population that is estimated to be in the buffer,
and that fraction is calculated as the fraction of the blockgroup's decennial census block population
that is in the census blocks inside the buffer.

A given block is considered entirely inside or entirely outside the buffer,
and those are used to more accurately estimate what fraction of a given block group's
population is inside the buffer. This is more accurate and faster than areal apportionment of block groups.
Census blocks are generally so small relative to typical buffers that this is very accurate -
it is least accurate if a very small buffer distance is specified
in an extremely low density rural area where a block can be geographically large.
Although it is rarely if ever a significant issue (for reasonable, useful buffer sizes),
an even more accurate approach in those cases might be either areal apportionment of blocks,
which is very slow and assumes residents are evenly spread out across the full block's area,
or else an approach that uses higher resolution estimates of residential locations than even
the Decennial census blocks can provide, such as a dasymetric map approach.
}

\keyword{internal}
