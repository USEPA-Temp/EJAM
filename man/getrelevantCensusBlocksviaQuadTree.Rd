% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getrelevantCensusBlocksviaQuadTree.R
\name{getrelevantCensusBlocksviaQuadTree}
\alias{getrelevantCensusBlocksviaQuadTree}
\title{find nearby blocks using Quad Tree data structure for speed, NO PARALLEL PROCESSING}
\usage{
getrelevantCensusBlocksviaQuadTree(
  sitepoints,
  cutoff,
  maxcutoff,
  uniqueonly = FALSE,
  avoidorphans,
  quadtree
)
}
\arguments{
\item{sitepoints}{data.table with columns siteid, lat, lon giving point locations of sites or facilities around which are circular buffers}

\item{cutoff}{miles radius, defining circular buffer around site point}

\item{maxcutoff}{miles distance (max distance to check? if not even 1 block point is within cutoff)}

\item{uniqueonly}{logical WILL BE REMOVED AND DONE OUTSIDE THIS FUNCTION. default FALSE (may remove this param) Whether to retain only unique blocks (unique residents) to avoid double-counting (but we want to drop duplicates later, not in here)}

\item{avoidorphans}{logical}

\item{quadtree}{a quadtree object created from the SearchTree package example: SearchTrees::createTree(blockdata::quaddata, treeType = "quad", dataType = "point")}
}
\description{
find nearby blocks using Quad Tree data structure for speed, NO PARALLEL PROCESSING
}
\details{
Uses indexgridsize and quaddata  variables that come from global environment (but should pass to this function rather than assume in global env?)
}
\seealso{
\link{getrelevantCensusBlocksviaQuadTree_Clustered}  \link{computeActualDistancefromSurfacedistance}
}
